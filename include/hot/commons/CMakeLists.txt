set(NAMESPACE hot/commons)
set(HDR_NAMESPACE ${CMAKE_CURRENT_SOURCE_DIR}/include/${NAMESPACE})
set(INSTALL_DIR include/k2/indexer/${NAMESPACE})

set(hot-commons-lib-HEADERS ${hot-commons-lib-HEADERS} ${HDR_NAMESPACE}/Algorithms.hpp)
set(hot-commons-lib-HEADERS ${hot-commons-lib-HEADERS} ${HDR_NAMESPACE}/BiNode.hpp)
set(hot-commons-lib-HEADERS ${hot-commons-lib-HEADERS} ${HDR_NAMESPACE}/BitMask32.hpp)
set(hot-commons-lib-HEADERS ${hot-commons-lib-HEADERS} ${HDR_NAMESPACE}/BiNodeInformation.hpp)
set(hot-commons-lib-HEADERS ${hot-commons-lib-HEADERS} ${HDR_NAMESPACE}/BiNodeInterface.hpp)
set(hot-commons-lib-HEADERS ${hot-commons-lib-HEADERS} ${HDR_NAMESPACE}/DiscriminativeBit.hpp)
set(hot-commons-lib-HEADERS ${hot-commons-lib-HEADERS} ${HDR_NAMESPACE}/EntriesRange.hpp)
set(hot-commons-lib-HEADERS ${hot-commons-lib-HEADERS} ${HDR_NAMESPACE}/PartialKeyConversionInformation.hpp)
set(hot-commons-lib-HEADERS ${hot-commons-lib-HEADERS} ${HDR_NAMESPACE}/InsertInformation.hpp)
set(hot-commons-lib-HEADERS ${hot-commons-lib-HEADERS} ${HDR_NAMESPACE}/MultiMaskPartialKeyMapping.hpp)
set(hot-commons-lib-HEADERS ${hot-commons-lib-HEADERS} ${HDR_NAMESPACE}/MultiMaskPartialKeyMappingInterface.hpp)
set(hot-commons-lib-HEADERS ${hot-commons-lib-HEADERS} ${HDR_NAMESPACE}/NodeAllocationInformation.hpp)
set(hot-commons-lib-HEADERS ${hot-commons-lib-HEADERS} ${HDR_NAMESPACE}/NodeAllocationInformations.hpp)
set(hot-commons-lib-HEADERS ${hot-commons-lib-HEADERS} ${HDR_NAMESPACE}/NodeMergeInformation.hpp)
set(hot-commons-lib-HEADERS ${hot-commons-lib-HEADERS} ${HDR_NAMESPACE}/NodeType.hpp)
set(hot-commons-lib-HEADERS ${hot-commons-lib-HEADERS} ${HDR_NAMESPACE}/NodeParametersMapping.hpp)
set(hot-commons-lib-HEADERS ${hot-commons-lib-HEADERS} ${HDR_NAMESPACE}/PartialKeyMappingBase.hpp)
set(hot-commons-lib-HEADERS ${hot-commons-lib-HEADERS} ${HDR_NAMESPACE}/PartialKeyMappingHelpers.hpp)
set(hot-commons-lib-HEADERS ${hot-commons-lib-HEADERS} ${HDR_NAMESPACE}/SearchResultForInsert.hpp)
set(hot-commons-lib-HEADERS ${hot-commons-lib-HEADERS} ${HDR_NAMESPACE}/SingleMaskPartialKeyMapping.hpp)
set(hot-commons-lib-HEADERS ${hot-commons-lib-HEADERS} ${HDR_NAMESPACE}/SingleMaskPartialKeyMappingInterface.hpp)
set(hot-commons-lib-HEADERS ${hot-commons-lib-HEADERS} ${HDR_NAMESPACE}/SIMDHelper.hpp)
set(hot-commons-lib-HEADERS ${hot-commons-lib-HEADERS} ${HDR_NAMESPACE}/SparsePartialKeys.hpp)

add_library(hot-commons-lib INTERFACE)
target_sources(hot-commons-lib INTERFACE $<BUILD_INTERFACE:${HDR_NAMESPACE}/Algorithms.hpp> $<INSTALL_INTERFACE:${INSTALL_DIR}/Algorithms.hpp>)
target_sources(hot-commons-lib INTERFACE $<BUILD_INTERFACE:${HDR_NAMESPACE}/BiNode.hpp> $<INSTALL_INTERFACE:${INSTALL_DIR}/BiNode.hpp>)
target_sources(hot-commons-lib INTERFACE $<BUILD_INTERFACE:${HDR_NAMESPACE}/BitMask32.hpp> $<INSTALL_INTERFACE:${INSTALL_DIR}/BitMask32.hpp>)
target_sources(hot-commons-lib INTERFACE $<BUILD_INTERFACE:${HDR_NAMESPACE}/BiNodeInformation.hpp> $<INSTALL_INTERFACE:${INSTALL_DIR}/BiNodeInformation.hpp>)
target_sources(hot-commons-lib INTERFACE $<BUILD_INTERFACE:${HDR_NAMESPACE}/BiNodeInterface.hpp> $<INSTALL_INTERFACE:${INSTALL_DIR}/BiNodeInterface.hpp>)
target_sources(hot-commons-lib INTERFACE $<BUILD_INTERFACE:${HDR_NAMESPACE}/DiscriminativeBit.hpp> $<INSTALL_INTERFACE:${INSTALL_DIR}/DiscriminativeBit.hpp>)
target_sources(hot-commons-lib INTERFACE $<BUILD_INTERFACE:${HDR_NAMESPACE}/EntriesRange.hpp> $<INSTALL_INTERFACE:${INSTALL_DIR}/EntriesRange.hpp>)
target_sources(hot-commons-lib INTERFACE $<BUILD_INTERFACE:${HDR_NAMESPACE}/PartialKeyConversionInformation.hpp> $<INSTALL_INTERFACE:${INSTALL_DIR}/PartialKeyConversionInformation.hpp>)
target_sources(hot-commons-lib INTERFACE $<BUILD_INTERFACE:${HDR_NAMESPACE}/InsertInformation.hpp> $<INSTALL_INTERFACE:${INSTALL_DIR}/InsertInformation.hpp>)
target_sources(hot-commons-lib INTERFACE $<BUILD_INTERFACE:${HDR_NAMESPACE}/MultiMaskPartialKeyMapping.hpp> $<INSTALL_INTERFACE:${INSTALL_DIR}/MultiMaskPartialKeyMapping.hpp>)
target_sources(hot-commons-lib INTERFACE $<BUILD_INTERFACE:${HDR_NAMESPACE}/MultiMaskPartialKeyMappingInterface.hpp> $<INSTALL_INTERFACE:${INSTALL_DIR}/MultiMaskPartialKeyMappingInterface.hpp>)
target_sources(hot-commons-lib INTERFACE $<BUILD_INTERFACE:${HDR_NAMESPACE}/NodeAllocationInformation.hpp> $<INSTALL_INTERFACE:${INSTALL_DIR}/NodeAllocationInformation.hpp>)
target_sources(hot-commons-lib INTERFACE $<BUILD_INTERFACE:${HDR_NAMESPACE}/NodeAllocationInformations.hpp> $<INSTALL_INTERFACE:${INSTALL_DIR}/NodeAllocationInformations.hpp>)
target_sources(hot-commons-lib INTERFACE $<BUILD_INTERFACE:${HDR_NAMESPACE}/NodeMergeInformation.hpp> $<INSTALL_INTERFACE:${INSTALL_DIR}/NodeMergeInformation.hpp>)
target_sources(hot-commons-lib INTERFACE $<BUILD_INTERFACE:${HDR_NAMESPACE}/NodeType.hpp> $<INSTALL_INTERFACE:${INSTALL_DIR}/NodeType.hpp>)
target_sources(hot-commons-lib INTERFACE $<BUILD_INTERFACE:${HDR_NAMESPACE}/NodeParametersMapping.hpp> $<INSTALL_INTERFACE:${INSTALL_DIR}/NodeParametersMapping.hpp>)
target_sources(hot-commons-lib INTERFACE $<BUILD_INTERFACE:${HDR_NAMESPACE}/PartialKeyMappingBase.hpp> $<INSTALL_INTERFACE:${INSTALL_DIR}/PartialKeyMappingBase.hpp>)
target_sources(hot-commons-lib INTERFACE $<BUILD_INTERFACE:${HDR_NAMESPACE}/PartialKeyMappingHelpers.hpp> $<INSTALL_INTERFACE:${INSTALL_DIR}/PartialKeyMappingHelpers.hpp>)
target_sources(hot-commons-lib INTERFACE $<BUILD_INTERFACE:${HDR_NAMESPACE}/SearchResultForInsert.hpp> $<INSTALL_INTERFACE:${INSTALL_DIR}/SearchResultForInsert.hpp>)
target_sources(hot-commons-lib INTERFACE $<BUILD_INTERFACE:${HDR_NAMESPACE}/SingleMaskPartialKeyMapping.hpp> $<INSTALL_INTERFACE:${INSTALL_DIR}/SingleMaskPartialKeyMapping.hpp>)
target_sources(hot-commons-lib INTERFACE $<BUILD_INTERFACE:${HDR_NAMESPACE}/SingleMaskPartialKeyMappingInterface.hpp> $<INSTALL_INTERFACE:${INSTALL_DIR}/SingleMaskPartialKeyMappingInterface.hpp>)
target_sources(hot-commons-lib INTERFACE $<BUILD_INTERFACE:${HDR_NAMESPACE}/SIMDHelper.hpp> $<INSTALL_INTERFACE:${INSTALL_DIR}/SIMDHelper.hpp>)
target_sources(hot-commons-lib INTERFACE $<BUILD_INTERFACE:${HDR_NAMESPACE}/SparsePartialKeys.hpp> $<INSTALL_INTERFACE:${INSTALL_DIR}/SparsePartialKeys.hpp>)
target_include_directories(hot-commons-lib INTERFACE 
    $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
    $<INSTALL_INTERFACE:include/k2/indexer/${NAMESPACE}>
)
target_link_libraries(hot-commons-lib INTERFACE content-helpers-lib)

# export the library in the common k2Targets
install(TARGETS hot-commons-lib EXPORT k2Targets)
install(FILES ${hot-commons-lib-HEADERS} DESTINATION ${INSTALL_DIR})
# export the cmake config in the build tree for any users who want to use this project from source
export(TARGETS hot-commons-lib NAMESPACE k2:: FILE hot-commons-config.cmake)