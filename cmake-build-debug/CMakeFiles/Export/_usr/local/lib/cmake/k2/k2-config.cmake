# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.5)
   message(FATAL_ERROR "CMake >= 2.6.0 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.6)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_targetsDefined)
set(_targetsNotDefined)
set(_expectedTargets)
foreach(_expectedTarget k2::appbase k2::assignment_manager k2::collection_metadata_cache k2::common k2::config k2::cpo_service k2::cpo_client k2::dto k2::indexer k2::k23si_client k2::k23si k2::node_pool_monitor k2::partition_manager k2::plog k2::persistent_volume k2::persistence_service k2::transport)
  list(APPEND _expectedTargets ${_expectedTarget})
  if(NOT TARGET ${_expectedTarget})
    list(APPEND _targetsNotDefined ${_expectedTarget})
  endif()
  if(TARGET ${_expectedTarget})
    list(APPEND _targetsDefined ${_expectedTarget})
  endif()
endforeach()
if("${_targetsDefined}" STREQUAL "${_expectedTargets}")
  unset(_targetsDefined)
  unset(_targetsNotDefined)
  unset(_expectedTargets)
  set(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT "${_targetsDefined}" STREQUAL "")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_targetsDefined}\nTargets not yet defined: ${_targetsNotDefined}\n")
endif()
unset(_targetsDefined)
unset(_targetsNotDefined)
unset(_expectedTargets)


# The installation prefix configured by this project.
set(_IMPORT_PREFIX "/usr/local")

# Create imported target k2::appbase
add_library(k2::appbase STATIC IMPORTED)

set_target_properties(k2::appbase PROPERTIES
  INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:k2::config>;\$<LINK_ONLY:k2::common>;\$<LINK_ONLY:k2::transport>;\$<LINK_ONLY:Seastar::seastar>"
)

# Create imported target k2::assignment_manager
add_library(k2::assignment_manager STATIC IMPORTED)

set_target_properties(k2::assignment_manager PROPERTIES
  INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:k2::common>;\$<LINK_ONLY:k2::transport>;\$<LINK_ONLY:Seastar::seastar>;\$<LINK_ONLY:k2::dto>;\$<LINK_ONLY:k2::partition_manager>"
)

# Create imported target k2::collection_metadata_cache
add_library(k2::collection_metadata_cache STATIC IMPORTED)

set_target_properties(k2::collection_metadata_cache PROPERTIES
  INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:k2::common>;\$<LINK_ONLY:k2::transport>;\$<LINK_ONLY:Seastar::seastar>;\$<LINK_ONLY:k2::dto>"
)

# Create imported target k2::common
add_library(k2::common STATIC IMPORTED)

set_target_properties(k2::common PROPERTIES
  INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:Seastar::seastar>"
)

# Create imported target k2::config
add_library(k2::config STATIC IMPORTED)

set_target_properties(k2::config PROPERTIES
  INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:k2::common>"
)

# Create imported target k2::cpo_service
add_library(k2::cpo_service STATIC IMPORTED)

set_target_properties(k2::cpo_service PROPERTIES
  INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:k2::common>;\$<LINK_ONLY:k2::transport>;\$<LINK_ONLY:Seastar::seastar>;\$<LINK_ONLY:k2::dto>"
)

# Create imported target k2::cpo_client
add_library(k2::cpo_client STATIC IMPORTED)

set_target_properties(k2::cpo_client PROPERTIES
  INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:k2::common>;\$<LINK_ONLY:k2::transport>;\$<LINK_ONLY:Seastar::seastar>;\$<LINK_ONLY:k2::dto>"
)

# Create imported target k2::dto
add_library(k2::dto STATIC IMPORTED)

set_target_properties(k2::dto PROPERTIES
  INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:k2::common>"
)

# Create imported target k2::indexer
add_library(k2::indexer STATIC IMPORTED)

# Create imported target k2::k23si_client
add_library(k2::k23si_client STATIC IMPORTED)

set_target_properties(k2::k23si_client PROPERTIES
  INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:k2::common>;\$<LINK_ONLY:k2::transport>;\$<LINK_ONLY:k2::dto>;\$<LINK_ONLY:k2::cpo_client>;\$<LINK_ONLY:Seastar::seastar>"
)

# Create imported target k2::k23si
add_library(k2::k23si STATIC IMPORTED)

set_target_properties(k2::k23si PROPERTIES
  INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:k2::indexer>;\$<LINK_ONLY:k2::common>;\$<LINK_ONLY:k2::transport>;\$<LINK_ONLY:k2::dto>;\$<LINK_ONLY:k2::cpo_client>;\$<LINK_ONLY:Seastar::seastar>"
)

# Create imported target k2::node_pool_monitor
add_library(k2::node_pool_monitor STATIC IMPORTED)

set_target_properties(k2::node_pool_monitor PROPERTIES
  INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:k2::common>;\$<LINK_ONLY:k2::transport>;\$<LINK_ONLY:Seastar::seastar>;\$<LINK_ONLY:k2::dto>"
)

# Create imported target k2::partition_manager
add_library(k2::partition_manager STATIC IMPORTED)

set_target_properties(k2::partition_manager PROPERTIES
  INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:k2::common>;\$<LINK_ONLY:k2::transport>;\$<LINK_ONLY:Seastar::seastar>;\$<LINK_ONLY:k2::dto>;\$<LINK_ONLY:k2::k23si>"
)

# Create imported target k2::plog
add_library(k2::plog STATIC IMPORTED)

set_target_properties(k2::plog PROPERTIES
  INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:k2::transport>;\$<LINK_ONLY:k2::common>"
)

# Create imported target k2::persistent_volume
add_library(k2::persistent_volume STATIC IMPORTED)

set_target_properties(k2::persistent_volume PROPERTIES
  INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:k2::common>;\$<LINK_ONLY:k2::plog>"
)

# Create imported target k2::persistence_service
add_library(k2::persistence_service STATIC IMPORTED)

set_target_properties(k2::persistence_service PROPERTIES
  INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:k2::common>;\$<LINK_ONLY:k2::transport>;\$<LINK_ONLY:Seastar::seastar>"
)

# Create imported target k2::transport
add_library(k2::transport STATIC IMPORTED)

set_target_properties(k2::transport PROPERTIES
  INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:k2::common>;\$<LINK_ONLY:k2::config>;\$<LINK_ONLY:Seastar::seastar>;\$<LINK_ONLY:crc32c>"
)

if(CMAKE_VERSION VERSION_LESS 2.8.12)
  message(FATAL_ERROR "This file relies on consumers using CMake 2.8.12 or greater.")
endif()

# Load information for each installed configuration.
get_filename_component(_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)
file(GLOB CONFIG_FILES "${_DIR}/k2-config-*.cmake")
foreach(f ${CONFIG_FILES})
  include(${f})
endforeach()

# Cleanup temporary variables.
set(_IMPORT_PREFIX)

# Loop over all imported files and verify that they actually exist
foreach(target ${_IMPORT_CHECK_TARGETS} )
  foreach(file ${_IMPORT_CHECK_FILES_FOR_${target}} )
    if(NOT EXISTS "${file}" )
      message(FATAL_ERROR "The imported target \"${target}\" references the file
   \"${file}\"
but this file does not exist.  Possible reasons include:
* The file was deleted, renamed, or moved to another location.
* An install or uninstall procedure did not complete successfully.
* The installation package was faulty and contained
   \"${CMAKE_CURRENT_LIST_FILE}\"
but not all the files it references.
")
    endif()
  endforeach()
  unset(_IMPORT_CHECK_FILES_FOR_${target})
endforeach()
unset(_IMPORT_CHECK_TARGETS)

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
